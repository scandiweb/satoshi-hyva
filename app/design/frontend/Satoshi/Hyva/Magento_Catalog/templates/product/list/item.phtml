<?php

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use Hyva\Theme\ViewModel\ProductCompare;
use Hyva\Theme\ViewModel\ProductListItem;
use Hyva\Theme\ViewModel\ProductPage;
use Hyva\Theme\ViewModel\Wishlist;
use Magento\Catalog\Block\Product\AbstractProduct;
use Magento\Catalog\Helper\Output as CatalogOutputHelper;
use Magento\Catalog\ViewModel\Product\OptionsData as ProductOptionsData;
use Magento\Framework\Escaper;
use Satoshi\Theme\Block\Template;


// phpcs:disable Magento2.Templates.ThisInTemplate.FoundThis
// phpcs:disable Magento2.Templates.ThisInTemplate.FoundHelper
// phpcs:disable Generic.Files.LineLength.TooLong

/** @var AbstractProduct $block */
/** @var Template $template */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var ProductPage $productViewModel */
$productViewModel = $viewModels->require(ProductPage::class);

/** @var ProductListItem $productListItemViewModel */
$productListItemViewModel = $viewModels->require(ProductListItem::class);

/** @var CatalogOutputHelper $catalogOutputHelper */
$catalogOutputHelper = $this->helper(CatalogOutputHelper::class);

/** @var ProductCompare $compareViewModel */
$compareViewModel = $viewModels->require(ProductCompare::class);
/** @var Wishlist $wishlistViewModel */
$wishlistViewModel = $viewModels->require(Wishlist::class);

/** @var HeroiconsOutline $heroicons */
$heroicons = $viewModels->require(HeroiconsOutline::class);

/** @var HeroiconsSolid $heroiconsSolid */
$heroiconsSolid = $viewModels->require(HeroiconsSolid::class);

$productOptionsViewmodel = $viewModels->require(ProductOptionsData::class);

$isLarge = $block->getData('isLarge');
$class = $block->getData('class');
$isSearchCard = $block->getData('isSearchCard');
$isAlpineTemplate = $block->getData('isAlpineTemplate');
$featuredImage = false;

$product = $block->getData('product');
$id = $product?->getId();

if (!$isAlpineTemplate) {
    $product = $block->getData('product');
    $id = $product?->getId();
}

?>

<div
    <?php if (!$isAlpineTemplate) : ?>
        x-element-transition-area="p-<?= $id ?>"
        key="<?= $id ?>"
    <?php endif; ?>
    class="<?= $class ?> <?= $isLarge ? 'col-span-2 md:col-auto' : '' ?> card-product w-full"
>

    <a
        class="group relative flex min-w-0 rounded-md justify-center"
        <?php if ($isAlpineTemplate) : ?>
            :href="product.url"
            x-element-transition-trigger:product<?= $isSearchCard ? '' : '.preview' ?>.animate="
              {
                'productImg': product.image,
                'title': product.title
              }
            "
        <?php else : ?>
            href="<?= $escaper->escapeUrl($product->getProductUrl()) ?>"
            x-element-transition-trigger:product.preview.animate
        <?php endif; ?>
    >
        <div
            class="h-0 w-0"
            style="padding-bottom: calc(100% * 1 / var(--product-aspect-ratio) + 81px)"
        ></div>
        <?=
        $template
            ->setData([
                'imageLoading' => 'lazy',
                'isAlpineTemplate' => $isAlpineTemplate,
                'product' => $product
            ])
            ->render('Magento_Catalog::product/list/item-details-article.phtml')
        ?>
    </a>
</div>
