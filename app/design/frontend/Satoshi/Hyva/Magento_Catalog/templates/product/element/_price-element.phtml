<?php

use Magento\Framework\View\Element\Template;
use Magento\Framework\App\ObjectManager;
use Magento\Framework\Pricing\Helper\Data as PricingHelper;

/* @var Template $block */

$product = $block->getData('product');
$customClass = $block->getData('class') ? " {$block->getData('class')}" : '';
$isInline = (bool)$block->getData('isInline');
$isAlpineTemplate = (bool)$block->getData('isAlpineTemplate');

$objectManager = ObjectManager::getInstance();
$pricingHelper = $objectManager->get(PricingHelper::class);

$formatPrice = function ($price) use ($pricingHelper) {
    return $pricingHelper->currency($price, true, false);
};

$specialPrice = $product->getSpecialPrice();
$regularPrice = $product->getPrice();
$specialFromDate = $product->getSpecialFromDate();
$specialToDate = $product->getSpecialToDate();
$currentDate = date('Y-m-d H:i:s');

$isSpecialPriceValid = $specialPrice && $currentDate >= $specialFromDate && $currentDate <= $specialToDate;

?>

<?php if ($isAlpineTemplate): ?>
    <template x-if="<?= $isSpecialPriceValid ?> && product.price > product.special_price">
        <div class="price__element flex items-center gap-2 text-text-500<?= $customClass ?>">
            <span class="sr-only"><?= __('Sale Price') ?></span>
            <span class="text-primary-500" x-text="getPrice(product.special_price)"></span>
            <s x-text="getPrice(product.price)"></s>
        </div>
    </template>
    <template x-if="!<?= $isSpecialPriceValid ?> && product.price_min != product.price_max">
        <div class="price__element flex items-center gap-2 text-text-500<?= $customClass ?>">
            <span><?= __('From') ?></span>
            <span class="text-primary-500" x-text="getPrice(product.price_min)"></span>
        </div>
    </template>
    <template x-if="!<?= $isSpecialPriceValid ?> && product.price_min == product.price_max">
        <div class="price__element flex items-center gap-2 text-text-500<?= $customClass ?>">
            <span class="sr-only"><?= __('Regular Price') ?></span>
            <span class="text-primary-500" x-text="getPrice(product.price)"></span>
        </div>
    </template>
<?php else: ?>
    <div class="<?= $isInline ? 'flex items-end flex-grow gap-3 mt-3 [&>div]:mt-0' : 'contents' ?>">
        <div class="price__element flex items-center gap-2 text-text-500<?= $customClass ?>">
            <?php if ($isSpecialPriceValid): ?>
                <span class="sr-only"><?= __('Sale Price') ?></span>
                <span class="text-primary-500"><?= $formatPrice($specialPrice) ?></span>
                <s><?= $formatPrice($regularPrice) ?></s>
            <?php elseif ($product->getPriceMin() != $product->getPriceMax()): ?>
                <span><?= __('From') ?></span>
                <span><?= $formatPrice($product->getPriceMin()) ?></span>
            <?php else: ?>
                <span class="sr-only"><?= __('Regular Price') ?></span>
                <span class="text-primary-500"><?= $formatPrice($regularPrice) ?></span>
            <?php endif; ?>
            <?php if ($block->getData('showBadge')): ?>
                <?= $block->getChildHtml('_discount-badge', true) ?>
            <?php endif; ?>
        </div>
        <?php if ($product->getUnitPriceMeasurement() !== null): ?>
            <div class="mt-2 text-md">
                <span class="sr-only"><?= __('Unit Price') ?></span>
                <span class="text-primary-500">
                    <span><?= $formatPrice($product->getUnitPrice()) ?></span>
                    <span aria-hidden="true">/</span>
                    <span class="sr-only">&nbsp;<?= __('per') ?>&nbsp;</span>
                    <span>
                        <?= $product->getUnitPriceMeasurement()->getReferenceValue() != 1 ? $product->getUnitPriceMeasurement()->getReferenceValue() : '' ?>
                        <?= $product->getUnitPriceMeasurement()->getReferenceUnit() ?>
                    </span>
                </span>
            </div>
        <?php endif; ?>
    </div>
<?php endif; ?>
