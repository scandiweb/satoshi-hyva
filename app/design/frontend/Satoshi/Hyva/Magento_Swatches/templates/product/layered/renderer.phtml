<?php

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\SvgIcons;
use Magento\Framework\Escaper;
use Magento\Framework\View\Helper\SecureHtmlRenderer;
use Magento\Swatches\Block\LayeredNavigation\RenderLayered;
use Magento\Swatches\Model\Swatch;
use Magento\Swatches\ViewModel\Product\Renderer\Configurable as ConfigurableViewModel;

// phpcs:disable Generic.Files.LineLength.TooLong

/** @var RenderLayered $block */
/** @var SecureHtmlRenderer $secureRenderer */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var ConfigurableViewModel $configurableViewModel */
$configurableViewModel = $viewModels->require(ConfigurableViewModel::class);

$swatchData = $block->getSwatchData();

$hyvaicons = $viewModels->require(SvgIcons::class);

$filters = $block->getLayout()->getBlock('catalog.leftnav')->getFilters() ?? [];
$availableFilters = array_filter($filters, function ($filter) {
    return $filter->getItemsCount();
});
?>
<script>
    function initLayeredSwatch_<?= $escaper->escapeJs($swatchData['attribute_code']) ?>() {
        return {
            getSwatchType(typeNumber) {
                switch ("" + typeNumber) {
                    case '<?= /** @noEscape */ Swatch::SWATCH_TYPE_VISUAL_COLOR ?>':
                        return "color"
                    case '<?= /** @noEscape */ Swatch::SWATCH_TYPE_VISUAL_IMAGE ?>':
                        return "image"
                    case '<?= /** @noEscape */ Swatch::SWATCH_TYPE_TEXTUAL ?>':
                    default:
                        return "text"
                }
            },
            getSwatchBackgroundStyle(type, value, image) {
                if (this.getSwatchType(type) === "color") {
                    return 'background-color:' + value;
                } else if (this.getSwatchType(type) === "image") {
                    return "background: #ffffff url('" + image + "') no-repeat center";
                } else {
                    return '';
                }
            },
            activeTooltipItem: false,
            tooltipPositionElement: false,
            isTooltipVisible() {
                return this.activeTooltipItem
            },
            isFirstItemCol() {
                const left = this.tooltipPositionElement.offsetLeft;
                const leftParent = this.tooltipPositionElement.parentNode.offsetLeft;
                const width = this.tooltipPositionElement.offsetWidth;
                return left - leftParent < width;
            },
            getTooltipImageStyle() {
                const type = this.activeTooltipItem.type;

                if (this.getSwatchType(type) === "color") {
                    return 'background-color:' + this.activeTooltipItem.value + '; width: 110px; height: 90px;';
                } else if (this.getSwatchType(type) === "image") {
                    return "background: #ffffff url('" + this.activeTooltipItem.thumb +
                        "') center center no-repeat; width: 110px; height: 90px;";
                } else {
                    return 'display:none';
                }
            },
            getTooltipPosition() {
                return this.tooltipPositionElement ?
                    (
                        `top: ${this.tooltipPositionElement.offsetTop}px;` +
                        `left: ${this.tooltipPositionElement.offsetLeft}px;`
                    ) : ''
            },
            getTooltipLabel() {
                return this.activeTooltipItem.label || ''
            },
            isVisualSwatch() {
                return this.getSwatchType(this.activeTooltipItem.type) !== 'text'
            }
        }
    }
</script>
<div x-show="$store.main.isMobile" class="sticky start-0 top-0 z-10 flex flex-col gap-3 bg-bg-500 px-2 md:pt-2">
    <div class="flex justify-between">
        <div class="flex gap-3 items-center">
            <button
                type="button"
                class="button button--ghost-primary icon-button icon-button--size-xs text-xxl transition-transform duration-300 motion-reduce:transition-none"
                aria-label="<?= __('Go back to all filters') ?>"
                @click="isTopLevel = true; currentName = ''"
                :tabindex="isTopLevel ? -1 : 0"
            >
                <?= $hyvaicons->renderHtml('chevron-left'); ?>
            </button>
            <h2
                class="text-md text-text-500 transition-transform duration-300 motion-reduce:transition-none"
                x-text="isTopLevel ? '<?= $escaper->escapeHtmlAttr(__('Filters')) ?>' : currentName"
            >
            </h2>
        </div>
        <button
            type="button"
            class="button button--outline-secondary icon-button icon-button--size-xs"
            aria-label="<?= __('Close') ?>"
            @click="$store.popup.hidePopup('<?= $swatchData['attribute_code'] ?>')"
        >
            <?= $hyvaicons->renderHtml('close'); ?>
        </button>
    </div>
    <hr class="divider -mx-3">
</div>
<article class="relative px-2" :aria-label="isTopLevel ? 'All filters' : 'Filter by ' + currentName?.toLowerCase()" x-data="initLayeredSwatch_<?= $escaper->escapeJs($swatchData['attribute_code']) ?>()">
    <nav class="flex flex-col gap-3 py-3 md:hidden" x-show="isTopLevel" aria-label="<?= $escaper->escapeHtmlAttr(__('Available filters')) ?>">
        <?php foreach($availableFilters as $availableFilter): ?>
            <button
                type="button"
                class="flex min-h-10 items-center justify-between py-1"
                @click="isTopLevel = false; currentName = '<?= $availableFilter->getName() ?>'"
            >
                <span
                    class="mr-4 <?= $availableFilter['attribute_model']['attribute_code'] !== $swatchData['attribute_code'] ? 'hidden' : '' ?>"
                >
                    <?= $hyvaicons->renderHtml('dot'); ?>
                </span>
                <p
                    class="grow text-left <?= $availableFilter['attribute_model']['attribute_code'] === $swatchData['attribute_code'] ? 'text-primary-500 font-semibold' : '' ?>"
                >
                    <?= $availableFilter->getName() ?>
                </p>
                <p class="icon-button">
                    <?= $hyvaicons->renderHtml('chevron'); ?>
                </p>
            </button>
        <?php endforeach; ?>
    </nav>

    <div
        class="flex gap-4 pt-4 md:pb-5 flex-wrap"
        :class="{
            'max-md:hidden': isTopLevel
        }"
    >
        <?php foreach ($swatchData['options'] as $option => $label):
            // check required if attribute property "is_filterable" is set to "Filterable (no results)"
            if (!isset($swatchData['swatches'][$option])):
                continue;
            endif; ?>
            <?php $isImageSwatch = (int)$swatchData['swatches'][$option]['type'] === Swatch::SWATCH_TYPE_VISUAL_IMAGE; ?>
            <button
                    @click="updateSelectedFilters('<?= $label['link'] ?>')"
                    aria-label="<?= $escaper->escapeHtmlAttr(__('Filter %1 %2', $swatchData['attribute_label'], $label['label'])) ?>"
                    class="button button--size-sm select-none transition-all ease-in-out button--outline-secondary "
                    :class="{
                        'w-8 h-8' : getSwatchType('<?= (string)$swatchData['swatches'][$option]['type'] ?>') !== 'text',
                        'border-2': selectedFiltersUrl === '<?= $label['link'] ?>'
                    }"
                <?php if ((int)$swatchData['swatches'][$option]['type'] !== Swatch::SWATCH_TYPE_TEXTUAL): ?>
                    :style="getSwatchBackgroundStyle(
                        '<?= (string)$swatchData['swatches'][$option]['type'] ?>',
                        '<?= (string)$swatchData['swatches'][$option]['value'] ?>',
                        '<?= $isImageSwatch ? $escaper->escapeJs($block->getSwatchPath('swatch_image', $swatchData['swatches'][$option]['value'])) : '' ?>'
                    )"
                <?php endif; ?>
                <?php if ($configurableViewModel->getShowSwatchTooltip()): ?>
                    <?php if ((int)$swatchData['swatches'][$option]['type'] !== Swatch::SWATCH_TYPE_TEXTUAL): ?>
                        <?php $swatchThumbPath = $isImageSwatch ? $block->getSwatchPath('swatch_thumb', $swatchData['swatches'][$option]['value']) : ''; ?>
                    <?php endif; ?>
                    @mouseenter.self="activeTooltipItem = {
                            attribute: '<?= $escaper->escapeJs($swatchData['swatches'][$option]['value']) ?>',
                            type: '<?= $escaper->escapeJs($swatchData['swatches'][$option]['type']) ?>',
                            id: '<?= $escaper->escapeJs($option) ?>',
                            label: '<?= $escaper->escapeJs($label['label']) ?>',
                            thumb: '<?= $escaper->escapeJs($swatchThumbPath ?? '') ?>',
                            value: '<?= $escaper->escapeJs($swatchData['swatches'][$option]['value']) ?>'
                        }; tooltipPositionElement = $event.target;"
                    @mouseleave.self="activeTooltipItem = false"
                <?php endif; ?>
            >
                <?php if ((string)$swatchData['swatches'][$option]['type'] === "0"): ?>
                    <?= $escaper->escapeHtml($swatchData['swatches'][$option]['value'] ?: $label['label']) ?>
                <?php endif; ?>
            </button>
        <?php endforeach; ?>
    </div>
    <?php if ($configurableViewModel->getShowSwatchTooltip()): ?>
        <?= /* @noEscape */
        $block->getBlockHtml('product.swatch.tooltip'); ?>
    <?php endif; ?>
</article>

<div x-show="$store.main.isMobile" class="mb-3">
    <div class="-top-10 end-0 start-0 h-10 bg-gradient-to-t from-bg-500 to-transparent"></div>
    <div class="flex items-center gap-3 bg-bg-500 px-2 pb-2">
        <button
            type="button"
            class="button button--outline-secondary"
            @click="$store.popup.hidePopup('<?= $swatchData['attribute_code'] ?>')"
        >
            <?= __('Reset') ?>
        </button>
        <button
            type="button"
            class="button button--filled-primary grow"
            @click="() => {
                _fetchPage(selectedFiltersUrl);
                $store.popup.hidePopup('<?= $swatchData['attribute_code'] ?>');
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            }"
        >
            <?= __('Apply') ?>
        </button>
    </div>
</div>
