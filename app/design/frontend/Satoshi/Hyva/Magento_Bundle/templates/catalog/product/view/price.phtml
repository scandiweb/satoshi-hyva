<?php

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\ProductPage;
use Hyva\Theme\ViewModel\ProductPrice;
use Magento\Bundle\Model\Product\Price as BundlePrice;
use Magento\Catalog\Block\Product\View;
use Magento\Catalog\Model\Product;
use Magento\Catalog\Pricing\Price\FinalPrice;
use Magento\Catalog\Pricing\Price\RegularPrice;
use Magento\Catalog\Pricing\Price\TierPrice;
use Magento\Framework\Escaper;

/** @var View $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */
/** @var Product $product */
$product = $block->getProduct();

/** @var ProductPrice $productPriceViewModel */
$productPriceViewModel = $viewModels->require(ProductPrice::class);

/** @var ProductPage $productViewModel */
$productViewModel = $viewModels->require(ProductPage::class);

$regularPrice = $productPriceViewModel->getPriceValue(RegularPrice::PRICE_CODE, $product);
$finalPrice = $productPriceViewModel->getPriceValue(FinalPrice::PRICE_CODE, $product);
$tierPrices = $productPriceViewModel->getTierPrices(TierPrice::PRICE_CODE, $product);

if ($productPriceViewModel->displayPriceInclAndExclTax()) {
    $finalPriceExclTax = $productPriceViewModel->getPriceValueExclTax(FinalPrice::PRICE_CODE, $product);
}

// The price type is compared with in a non-type-safe operator on purpose, because the constant is an int but the attribute value is a string
$isFixedPriceBundleProduct = $product->getPriceType() == BundlePrice::PRICE_TYPE_FIXED;

$displayTax = $productPriceViewModel->displayPriceIncludingTax();

?>

<div
    x-data="BundlePrice({
        productId: <?= (int)$product->getId() ?>,
        initialFinalPrice: <?= $isFixedPriceBundleProduct ? (float) $finalPrice : 0 ?>,
        initialTierPrices: <?= /** @noEscape */ json_encode($tierPrices) ?>,
        <?php if ($productPriceViewModel->displayPriceInclAndExclTax()): ?>
            initialBasePrice: <?= $isFixedPriceBundleProduct ? (float) $finalPriceExclTax : 0 ?>,
            calculatedBasePrice: false,
            customOptionBasePrices: [],
            calculatedBasePriceWithCustomOptions: false,
        <?php endif; ?>
        displayPriceInclAndExclTax: <?= (int) $productPriceViewModel->displayPriceInclAndExclTax() ?>,
    })"
    x-bind="eventListeners"
    class="price-box"
>
    <span 
        id="product-price-<?= (int)$product->getId() ?>"
        class="md:text-lg"
        aria-live="assertive"
        aria-atomic="true"
    >
        <span class="sr-only">
            <?= $escaper->escapeHtml(__('Final product price ')) ?>
        </span>
        <span class="price" x-html="getFormattedFinalPrice()"></span>
    </span>

    <?php if ($productPriceViewModel->displayPriceInclAndExclTax()): ?>
        <span class="text-[14px]">
            <span><?= $escaper->escapeHtml(__('Excl. Tax')) ?>:</span>
            <span class="price" x-html="getFormattedBasePrice()"><?= /** @noEscape */ $productViewModel->format($finalPriceExclTax) ?></span>
        </span>
    <?php endif; ?>
</div>
